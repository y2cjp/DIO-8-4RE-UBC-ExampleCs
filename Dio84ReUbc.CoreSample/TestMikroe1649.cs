// MIT License
//
// Copyright (c) Y2 Corporation

using System.Threading;
using Y2.Ft4222.Core;

namespace Dio84ReUbc.CoreSample
{
    public class TestMikroe1649
    {
        private const int DisplayAreaWidth = 96;
        private const int DisplayAreaHeight = 39;

        private readonly byte[] picture =
            {
                0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0xF9, 0xF9, 0xC1, 0x81, 0xC1, 0xE1, 0xF1,
                0x79, 0x39, 0xD9, 0xE9, 0xF1, 0x71, 0x39, 0x39, 0x79, 0xF9, 0xF1, 0xE1, 0x01, 0x01, 0x01, 0x01, 0x01,
                0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0x81, 0xC1, 0xE1, 0xE1, 0xF1, 0x71, 0x71, 0x39,
                0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x80, 0xE0, 0xFF, 0xFF, 0x1F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x01, 0x01, 0x81, 0xC1, 0xE0,
                0xF8, 0x7C, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC,
                0x7E, 0x1E, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1C, 0x0E, 0x0E,
                0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1E, 0xFE, 0xFC, 0xF8, 0x00, 0x00, 0xC0, 0xF0, 0xFE, 0x7F,
                0x1F, 0x07, 0x0F, 0xDE, 0xFE, 0xFC, 0x78, 0x00, 0xC0, 0xF8, 0xFE, 0x7F, 0x0F, 0x07, 0x0F, 0xFE, 0xFE,
                0xFC, 0x78, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xFF, 0x3F, 0x07, 0x00,
                0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0x7C, 0x1E, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF1, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00,
                0x00, 0xFE, 0xFF, 0xFF, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0xE0,
                0xF8, 0x7E, 0x1F, 0x0F, 0x83, 0xF0, 0xFE, 0xFF, 0xFF, 0xF3, 0xF8, 0x38, 0x1C, 0x1E, 0x0F, 0x07, 0xC1,
                0xF0, 0xFE, 0x7F, 0x7F, 0x73, 0x38, 0x38, 0x1C, 0x1E, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0xC0, 0xC0, 0xC0, 0xC8, 0xCF, 0xCF, 0xC7, 0xC0, 0xC0, 0xC0, 0xC8, 0xCC, 0xCE, 0xCF, 0xCF, 0xCF, 0xCF,
                0xCE, 0xCE, 0xCE, 0xCE, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
                0xC0, 0xC0, 0xC0, 0xC3, 0xC7, 0xC7, 0xC7, 0xCF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0x43, 0x47, 0x47, 0xC7,
                0xCF, 0xCE, 0xCE, 0xCE, 0xC7, 0xC7, 0xC7, 0xC3, 0xC3, 0xC1, 0xC1, 0xC0, 0xC0, 0xC0, 0xCE, 0xCF, 0xCF,
                0xC3, 0xC0, 0xC1, 0xC7, 0xCF, 0xCF, 0xCE, 0xC0, 0xC0, 0xCE, 0xCF, 0xCF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0,
                0x40, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
                0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x61, 0x5F, 0x63, 0x5F, 0x61, 0x7F, 0x61,
                0x5F, 0x63, 0x5F, 0x61, 0x7F, 0x61, 0x5F, 0x63, 0x5F, 0x61, 0x7F, 0x7F, 0x4F, 0x4F, 0x7F, 0x7F, 0x7F,
                0x79, 0x57, 0x57, 0x57, 0x61, 0x7F, 0x5E, 0x4F, 0x57, 0x5B, 0x5C, 0x7F, 0x63, 0x5D, 0x5D, 0x5D, 0x6F,
                0x7F, 0x7F, 0x4F, 0x4F, 0x7F, 0x7F, 0x7F, 0x63, 0x5D, 0x5D, 0x5D, 0x6F, 0x7F, 0x63, 0x5D, 0x5D, 0x5D,
                0x63, 0x7F, 0x7F, 0x4F, 0x4F, 0x7F, 0x7F, 0x7F, 0x6F, 0x5F, 0x5D, 0x61, 0x7F, 0x7F, 0x41, 0x75, 0x75,
                0x75, 0x7B, 0x7F, 0x7F
            };

        private readonly IFt4222I2cMaster _i2c;
        private readonly byte _slaveAddress;

        public TestMikroe1649(IFt4222I2cMaster i2c, byte slaveAddress)
        {
            _i2c = i2c;
            _slaveAddress = slaveAddress;
        }

        /// <summary>
        /// 画像表示テスト
        /// </summary>
        public void TestPicture()
        {
            var oled = new Ssd1306(_i2c, _slaveAddress, DisplayAreaWidth, DisplayAreaHeight);
            oled.Initialize();
            oled.VisibleDisplay(false);

            // 画像の描画
            oled.DrawPicture(picture);
            oled.VisibleDisplay(true);
            Thread.Sleep(1000);

            // 表示の反転
            oled.SetInverseDisplay();
            Thread.Sleep(1000);
            oled.SetNormalDisplay();
            Thread.Sleep(1000);

            // コントラスト変更
            for (var contrast = 0xaf; contrast > 0x00; contrast--)
            {
                oled.SetContrast(contrast);
                Thread.Sleep(10);
            }
            for (var contrast = 0x00; contrast < 0xaf; contrast++)
            {
                oled.SetContrast(contrast);
                Thread.Sleep(10);
            }

            // スクロール
            oled.StartScroll(Ssd1306.ScrollDirection.Left, 0, 5, Ssd1306.ScrollInterval.Frame4);
            Thread.Sleep(10000);
            oled.StopScroll();

            oled.VisibleDisplay(false);
        }
    }
}
